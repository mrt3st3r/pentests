import subprocess
from optparse import OptionParser
import re


def getArguments():
    parser = OptionParser()
    parser.add_option('-i', '--INTERFACE', dest='interface', help='Provide value for interface!')
    parser.add_option('-m', '--MAC', dest='new_mac', help='Provide MAC address!')
    (option, args) = parser.parse_args()
    if not option.interface:
        parser.error("[-] Please specify an interfce, use --help for more info.")
    elif not option.new_mac:
        parser.error("[-] Please specify a new MAC, use --help for more info.")
    return option


def change_mac(interface, new_mac):
    print("[+] Changing MAC address for " + interface + " to " + new_mac)
    subprocess.call(['ifconfig', interface, 'down'])
    subprocess.call(['ifconfig', interface, 'hw', 'ether', new_mac])
    subprocess.call(['ifconfig', interface, 'up'])


def verify_mac_changed(interface):
    ifconfigResult = subprocess.check_output(['ifconfig', interface])
    ifconfigResult = ifconfigResult.decode('ISO-8859-1')
    mac_pattern = '\w\w:\w\w:\w\w:\w\w:\w\w:\w\w'
    changed_mac = re.search(mac_pattern, ifconfigResult)
    changed_mac = changed_mac.group(0)
    if changed_mac == options.new_mac:
        print('[+] MAC is changed to: ' + changed_mac)
    else:
        print("[+] MAC address hasn't been changed, Current MAC address is: " + options.new_mac)


options = getArguments()
change_mac(options.interface, options.new_mac)
verify_mac_changed(options.interface)
